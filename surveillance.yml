networks:
  appnet:
    external: true

services:
  frigate:
    container_name: frigate
    image: ghcr.io/blakeblackshear/frigate:stable-tensorrt
    restart: unless-stopped
    stop_grace_period: 30s # allow enough time to shut down the various services
    privileged: true  # needed for Coral and hardware acceleration
    shm_size: "512mb"  # required for ffmpeg to run reliably
    networks:
      - appnet
    ports:
      - "8971:8971"
      - "5000:5000" # Internal unauthenticated access. Expose carefully.
      - "8554:8554" # RTSP feeds
      - "8555:8555/tcp" # WebRTC over tcp
      - "8555:8555/udp" # WebRTC over udp
    runtime: nvidia
    environment:
      - FRIGATE_RTSP_URL=${RTSP_URL}
      - FRIGATE_RTSP_URL_LQ=${RTSP_URL_LQ}
      - FRIGATE_EMAIL=${EMAIL}
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - YOLO_MODELS=yolov7-tiny-416
    volumes:
      - /etc/localtime:/etc/localtime:ro           # sync container time
      - ${SURVEILLANCEPATH}/frigate/config:/config       # place your config.yml here
      - ${SURVEILLANCEPATH}/frigate/media:/media/frigate           # recording clips, snapshots, etc
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    devices:
      - /dev/bus/usb:/dev/bus/usb # Passes the USB Coral, needs to be modified for other versions
      - /dev/apex_0:/dev/apex_0 # Passes a PCIe Coral, follow driver instructions here https://coral.ai/docs/m2/get-started/#2a-on-linux
      - /dev/dri/renderD128:/dev/dri/renderD128 # For intel hwaccel, needs to be updated for your hardware



